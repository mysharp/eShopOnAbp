/* This file is automatically generated by ABP framework to use MVC Controllers from javascript. */


// module basket

(function(){

  // controller eShopOnAbp.basketService.basket

  (function(){

    abp.utils.createNamespace(window, 'eShopOnAbp.basketService.basket');

    eShopOnAbp.basketService.basket.get = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/basket/basket',
        type: 'GET'
      }, ajaxParams));
    };

    eShopOnAbp.basketService.basket.getByAnonymousUserId = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/basket/basket/' + id + '/by-anonymous-user-id',
        type: 'GET'
      }, ajaxParams));
    };

    eShopOnAbp.basketService.basket.mergeBaskets = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/basket/basket/merge-baskets',
        type: 'POST'
      }, ajaxParams));
    };

    eShopOnAbp.basketService.basket.addProduct = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/basket/basket/product',
        type: 'POST',
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    eShopOnAbp.basketService.basket.removeProduct = function(input, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/basket/basket/product' + abp.utils.buildQueryString([{ name: 'productId', value: input.productId }, { name: 'count', value: input.count }, { name: 'anonymousId', value: input.anonymousId }]) + '',
        type: 'DELETE'
      }, ajaxParams));
    };

    eShopOnAbp.basketService.basket.purchase = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/basket/basket/purchase',
        type: 'POST',
        dataType: null
      }, ajaxParams));
    };

  })();

})();


